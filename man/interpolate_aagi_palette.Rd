% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interpolate_aagi_palette.R
\name{interpolate_aagi_palette}
\alias{interpolate_aagi_palette}
\title{Interpolate an AAGI Colour Palette to Expand the Colour Values}
\usage{
interpolate_aagi_palette(palette = "colourful", reverse = FALSE, ...)
}
\arguments{
\item{palette}{(\code{character}; default = \code{colourful}) given name of an
\acronym{AAGI} palette: \code{\link[=aagi_palettes]{aagi_palettes()}}}

\item{reverse}{(\code{Boolean}; default = \code{FALSE}) indicating if palette should
be reversed.}

\item{...}{Additional arguments to pass to \code{\link[grDevices:colorRamp]{grDevices::colorRampPalette()}},
see details here \code{\link[grDevices:colorRamp]{grDevices::colorRamp()}}.}
}
\value{
A function that takes a single value and makes that many colours.
}
\description{
Takes a \acronym{AAGI} colour palette and generates more colours from it, so
that there are enough to make your chart. The interpolation method is set
to \code{spline} (the default is \code{linear}) in an attempt to reduce the number of
vomit colours that get produced when generating many colours.
}
\examples{
library(ggplot2)

x <- interpolate_aagi_palette("colourful")
# round the weights to clean up the legend, this is just an e.g. after all...
wt_vals <- x(length(unique(round(mtcars$wt, 1))))

ggplot(mtcars, aes(x = mpg, y = hp, colour = as.factor(round(wt, 1)))) +
geom_point() +
scale_colour_manual("Weight", values = wt_vals)

}
\seealso{
aagi_palettes
}
